{"addEventListener":{"prefix":"ae","body":["${1:document}.addEventListener('${2:load}', function (e) {","\t${3:// body}","});"],"description":"Code snippet for \"addEventListener\""},"appendChild":{"prefix":"ac","body":["${1:document}.appendChild(${2:elem});"],"description":"Code snippet for \"appendChild\""},"removeChild":{"prefix":"rc","body":["${1:document}.removeChild(${2:elem});"],"description":"Code snippet for \"removeChild\""},"createElement":{"prefix":"cel","body":["${1:document}.createElement(${2:elem});"],"description":"Code snippet for \"createElement\""},"createDocumentFragment":{"prefix":"cdf","body":["${1:document}.createDocumentFragment();$2"],"description":"Code snippet for \"createDocumentFragment\""},"classList.add":{"prefix":"ca","body":["${1:document}.classList.add('${2:class}');"],"description":"Code snippet for \"classList.add\""},"classList.toggle":{"prefix":"ct","body":["${1:document}.classList.toggle('${2:class}');"],"description":"Code snippet for \"classList.toggle\""},"classList.remove":{"prefix":"cr","body":["${1:document}.classList.remove('${2:class}');"],"description":"Code snippet for \"classList.remove\""},"getElementById":{"prefix":"gi","body":["${1:document}.getElementById('${2:id}');"],"description":"Code snippet for \"getElementById\""},"getElementsByClassName":{"prefix":"gc","body":["${1:document}.getElementsByClassName('${2:class}');"],"description":"Code snippet for \"getElementsByClassName\""},"getElementsByTagName":{"prefix":"gt","body":["${1:document}.getElementsByTagName('${2:tag}');"],"description":"Code snippet for \"getElementsByTagName\""},"getAttribute":{"prefix":"ga","body":["${1:document}.getAttribute('${2:attr}');"],"description":"Code snippet for \"getAttribute\""},"setAttribute":{"prefix":"sa","body":["${1:document}.setAttribute('${2:attr}', ${3:value});"],"description":"Code snippet for \"setAttribute\""},"removeAttribute":{"prefix":"ra","body":["${1:document}.removeAttribute('${2:attr}');"],"description":"Code snippet for \"removeAttribute\""},"innerHTML":{"prefix":"ih","body":["${1:document}.innerHTML = '${2:elem}';"],"description":"Code snippet for \"innerHTML\""},"textContent":{"prefix":"tc","body":["${1:document}.textContent = '${2:content}';"],"description":"Code snippet for \"textContent\""},"querySelector":{"prefix":"qs","body":["${1:document}.querySelector('${2:selector}');"],"description":"Code snippet for \"querySelector\""},"querySelectorAll":{"prefix":"qsa","body":["${1:document}.querySelectorAll('${2:selector}');"],"description":"Code snippet for \"querySelectorAll\""},"Bubble Sort":{"prefix":"JS1-bubble","body":["function bubble_Sort(a)","{","    var swapp;","    var n = a.length-1;","    var x=a;","    do {","        swapp = false;","        for (var i=0; i < n; i++)","        {","            if (x[i] < x[i+1])","            {","               var temp = x[i];","               x[i] = x[i+1];","               x[i+1] = temp;","               swapp = true;","            }","        }","        n--;","    } while (swapp);"," return x; ","}"],"description":"Bubble Sort Example - https://www.w3resource.com/javascript-exercises/javascript-function-exercise-24.php"},"Node Dockerfile":{"prefix":"js1-dockerfile","body":["FROM node:${1|latest,12|}","WORKDIR /usr/src/app","RUN ${2|npm install, |}","COPY package*.json ./ && . . ${3| ,&& |}","EXPOSE ${4|3000, |}","CMD [\"npm\", \"start\"]"],"description":"Creates a simple Dockerfile to wrap your node application in"},"require mongoose":{"prefix":"mongoose","body":"const mongoose = require('mongoose');","description":"Require mongoose from node_modules/"},"require mongoose connection":{"prefix":"mongoose.conn","body":["mongoose.connect(","'mongodb+srv://${1:username}:${2:password}@cluster0-erizp.mongodb.net/${3:database}?retryWrites=true&w=majority'",", {","  useNewUrlParser: true,","  useCreateIndex: true,","  useUnifiedTopology: true","});"],"description":"Require mongoose from node_modules/"},"Async/await":{"prefix":"node-async-await","body":["async function getData() {","  return Promise.resolve('data');","}","","async function getMoreData(data) {","  return Promise.resolve(data + 'more data');","}","","function getAll() {","  const data = await getData();","  const moreData = await getMoreData(data);","  return `All the data: ${data}, ${moreData}`;","}","","getAll().then((all) => {","  console.log('all the data')","})"],"description":"demonstrates async/await"},"Async IIFE":{"prefix":"node-iife","body":"(async (${1:arguments}) => {\n\t${0}\n})(${2});","description":"immediately-invoked ASYNC function"},"file read async":{"prefix":"node-file-read-async","body":["const fs = require('fs');","fs.readFile('${1:input.txt}', function (err, data) {","  if (err) return console.error(err);","  console.log(data.toString());","});"],"description":"Reads a file asynchronously"},"Node.js style callback":{"prefix":"cb","body":"(err, ${1:value}) => {${0}}","description":"Node.js style callback"},"require":{"prefix":"re","body":"require('${1:module}');","description":"require"},"require local":{"prefix":"rel","body":"require('./${1:module}');","description":"require local"},"require assignment":{"prefix":"req","body":"const ${1:module} = require('${1:module}');","description":"require assignment"},"require assignment local":{"prefix":"reql","body":"const ${1:module} = require('./${1:module}');","description":"require assignment local"},"destructuring require assignment":{"prefix":"dreq","body":"const {${1:module}} = require('${1:module}');","description":"destructuring require assignment"},"destructuring require assignment local":{"prefix":"dreql","body":"const {${1:module}} = require('./${1:module}');","description":"destructuring require assignment local"},"exports.member":{"prefix":"em","body":"exports.${1:member} = ${2:value};","description":"exports.member"},"module.exports":{"prefix":"me","body":"module.exports = ${1:name};","description":"module.exports"},"module exports object":{"prefix":"meo","body":"module.exports = {\n\t${1:member}\n};","description":"module exports object"},"event handler":{"prefix":"on","body":"${1:emitter}.on('${2:event}', (${3:arguments}) => {\n\t${0}\n});","description":"event handler"},"HTTP - https://nodejs.org/api/http.html":{"prefix":"http","body":["let http = require('http')","const PORT = ${1};","","","http.createServer(","  (request,res)=>{","    if (request.url == ${2:'/'}) {","      res.writeHead(200, {","        'Content-Type': 'text/html',","        'Content-Length': ${3:index.html}.length,","        'Expires': new Date().toUTCString()","      })","      res.end(${3:index.html});","    }","    else {","      return response.end('Invalid request');","    }","  }",").listen(PORT);",""],"description":"Create a basic HTTP server - https://nodejs.org/api/http.html"},"describe":{"prefix":"desc","body":"describe('${1:description}', () => {\n\t${0}\n});","description":"describe"},"context":{"prefix":"cont","body":"context('${1:description}', () => {\n\t${0}\n});","description":"context"},"it":{"prefix":"it","body":"it('${1:description}', () => {\n\t${0}\n});","description":"it"},"it synchronous":{"prefix":"its","body":"it('${1:description}', () => {\n\t${0}\n});","description":"it synchronous"},"it asynchronous":{"prefix":"ita","body":"it('${1:description}', (done) => {\n\t${0}\n\tdone();\n});","description":"it asynchronous"},"before test suite":{"prefix":"bf","body":"before(() => {\n\t${0}\n});","description":"before test suite"},"before each test":{"prefix":"bfe","body":"beforeEach(() => {\n\t${0}\n});","description":"before each test"},"after test suite":{"prefix":"aft","body":"after(() => {\n\t${0}\n});","description":"after test suite"},"after each test":{"prefix":"afe","body":"afterEach(() => {\n\t${0}\n});","description":"after each test"},"app":{"prefix":"app","body":"const app = express();","description":"Initiazlizing app variable"},"app.use":{"prefix":"app.use","body":"app.use('$1');","description":"Insert app.use"},"app.use.json":{"prefix":"app.json","body":"app.use(express.json());","description":"Insert express.json to app (app.use)"},"app.get":{"prefix":"app.get","body":["app.get('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP GET request."},"app.post":{"prefix":"app.post","body":["app.post('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP POST request."},"app.put":{"prefix":"app.put","body":["app.put('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP PUT request."},"app.delete":{"prefix":"app.delete","body":["app.delete('${1:path}', (req, res) => {","return \t$2","});"],"description":"To route to a specified path with a callback"},"app.patch":{"prefix":"app.patch","body":["app.patch('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP PATCH request."},"app.route":{"prefix":"app.route","body":["app.route('/${1:path}')",".all(function (req, res, next) {","  // runs for all HTTP verbs first","  // think of it as route specific middleware!","})",".get(function (req, res, next) {","  res.json({})","})",".post(function (req, res, next) {","  // maybe add a new event...","});"],"description":"app.route"},"app.listen":{"prefix":"listen","body":" app.listen(${1:port});","description":"Starts a UNIX socket and listens for connections on the given path. This method is identical to Node’s http.Server.listen()"},"app.listen template":{"prefix":"app.listen","body":["app.listen(${1:port}, () => {","\tconsole.log(`Server started on ${2:port}`);","});"],"description":"Starts a UNIX socket and listens for connections on the given path. This method is identical to Node’s http.Server.listen()"},"app template":{"prefix":"app.template","body":["const express = require('express');","const app = express();","","app.get('${1:path}', (req, res) => {","return \t${2:body}","});","","app.listen(process.env.PORT || ${3:port}, () => {","\tconsole.log(`Server started on ${3:port}`);","});","","//npm start, open your browser and run localhost:${3:port}"],"description":"Create a express app template"},"router":{"prefix":"router","body":"const router = require('express').Router();","description":"Initiazlizing router variable"},"router.use":{"prefix":"router.use","body":"router.use($1);","description":"Insert router.use()"},"router.use.path":{"prefix":"router.use.path","body":"router.use('{1:path}', ${2:router});","description":"Insert router.use() with path"},"router.get":{"prefix":"router.get","body":["router.get('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP GET request."},"router.post":{"prefix":"router.post","body":["router.post('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP POST request."},"router.put":{"prefix":"router.put","body":["router.put('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP PUT request."},"router.delete":{"prefix":"router.delete","body":["router.delete('${1:path}', (req, res) => {","return \t$2","});"],"description":"To route to a specified path with a callback"},"router.patch":{"prefix":"router.patch","body":["router.patch('${1:path}', (req, res) => {","return \t$2","});"],"description":"Routes HTTP PATCH request."},"require a module":{"prefix":"require","body":"const $1 = require('$2');","description":"Require package from node_modules/ or project"},"require express module":{"prefix":"express","body":"const express = require('express');","description":"Require Expess package from node_modules/"},"import express module":{"prefix":"iexpress","body":"import express from 'express';","description":"Import Expess package from node_modules/"},"require Router() from express":{"prefix":"router","body":"const router = require('express').Router();","description":"Require Router() from express package"},"require routes index":{"prefix":"routes","body":"const routes = require('./routes');","description":"Require routes index from routes directory"},"export controller":{"prefix":"controller","body":["module.exports = {","  index (req, res) {","    ${1:body}","  }","}"],"description":"Export Controller"},"export router":{"prefix":"export.router","body":"module.exports = router","description":"Export Router"},"export model":{"prefix":"export.model","body":"module.exports = model('${$1:model}', ${$2:model}","description":"Export Model"}}